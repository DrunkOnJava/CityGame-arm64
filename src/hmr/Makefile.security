# SimCity ARM64 - HMR Security Module Makefile
# Week 3 Day 11 - Enterprise Security Features
# Target: <3ms module load time, <500μs security validation

# Compiler settings optimized for Apple Silicon
AS = as
CC = clang
ASFLAGS = -arch arm64 -mmacosx-version-min=11.0
CFLAGS = -arch arm64 -mmacosx-version-min=11.0 -O3 -ffast-math -mcpu=apple-m1
CFLAGS += -I../../include -I. 
CFLAGS += -DHMR_SECURITY_ENABLED=1 -DHMR_ENTERPRISE_FEATURES=1

# Security-specific flags
SECURITY_FLAGS = -fstack-protector-strong -D_FORTIFY_SOURCE=2
SECURITY_FLAGS += -Wformat -Wformat-security -fPIE

# Performance optimization flags
PERF_FLAGS = -flto -fomit-frame-pointer -funroll-loops
PERF_FLAGS += -mllvm -arm-global-merge -mllvm -enable-arm-global-merge

# Objects for security module
SECURITY_OBJS = module_security.o resource_enforcer.o audit_logger.o
SECURITY_OBJS += module_loader_secure.o

# Updated module loader with security integration  
MODULE_LOADER_OBJS = module_loader.o module_memory.o module_versioning.o

# All objects
ALL_OBJS = $(SECURITY_OBJS) $(MODULE_LOADER_OBJS)

# Libraries
SECURITY_LIBS = -framework Security -framework Foundation
PERFORMANCE_LIBS = -lpthread -lc++

# Targets
.PHONY: all security test clean performance-test

all: libhmr_security.a hmr_security_test security_benchmark

# Main security library
libhmr_security.a: $(SECURITY_OBJS)
	@echo "Creating enterprise security library..."
	ar rcs $@ $^
	ranlib $@
	@echo "Security library created: $@"

# Updated module loader with security
libhmr_module_loader.a: $(MODULE_LOADER_OBJS)
	@echo "Creating secure module loader..."
	ar rcs $@ $^
	ranlib $@

# Security test suite
hmr_security_test: security_test.o libhmr_security.a
	$(CC) $(CFLAGS) $(SECURITY_FLAGS) -o $@ $^ $(SECURITY_LIBS) $(PERFORMANCE_LIBS)

# Performance benchmark
security_benchmark: security_benchmark.o libhmr_security.a
	$(CC) $(CFLAGS) $(PERF_FLAGS) -o $@ $^ $(SECURITY_LIBS) $(PERFORMANCE_LIBS)

# Assembly sources with security features
module_security.o: module_security.s module_security.h
	$(AS) $(ASFLAGS) -o $@ $<

resource_enforcer.o: resource_enforcer.s module_security.h
	$(AS) $(ASFLAGS) -o $@ $<

audit_logger.o: audit_logger.s module_security.h
	$(AS) $(ASFLAGS) -o $@ $<

# Updated module loader
module_loader.o: module_loader.s module_interface.h module_security.h
	$(AS) $(ASFLAGS) -o $@ $<

module_memory.o: module_memory.s
	$(AS) $(ASFLAGS) -o $@ $<

module_versioning.o: module_versioning.s
	$(AS) $(ASFLAGS) -o $@ $<

# C test files
security_test.o: security_test.c module_security.h
	$(CC) $(CFLAGS) $(SECURITY_FLAGS) -c -o $@ $<

security_benchmark.o: security_benchmark.c module_security.h
	$(CC) $(CFLAGS) $(PERF_FLAGS) -c -o $@ $<

# Security validation test
security: hmr_security_test
	@echo "Running security validation tests..."
	./hmr_security_test --verify-signatures --test-sandbox --audit-log
	@echo "Security tests completed"

# Performance validation
performance-test: security_benchmark
	@echo "Running security performance benchmarks..."
	@echo "Target: <500μs signature verification, <100μs resource enforcement"
	./security_benchmark --signature-perf --enforcement-perf --audit-perf
	@echo "Performance benchmarks completed"

# Integration test with actual module loading
integration-test: libhmr_security.a libhmr_module_loader.a
	@echo "Running security integration tests..."
	$(CC) $(CFLAGS) -o integration_test integration_test.c $^ $(SECURITY_LIBS) $(PERFORMANCE_LIBS)
	./integration_test --load-secure-module --enforce-limits
	@echo "Integration tests completed"

# Clean build artifacts
clean:
	rm -f *.o *.a hmr_security_test security_benchmark integration_test
	rm -f /tmp/simcity_audit.log
	@echo "Security build artifacts cleaned"

# Code analysis and security audit
security-audit:
	@echo "Running static security analysis..."
	clang-static-analyzer $(CFLAGS) *.c
	@echo "Checking for security vulnerabilities..."
	# Note: Add your preferred static analysis tools here

# Documentation generation
docs:
	@echo "Generating security module documentation..."
	doxygen security_docs.config
	@echo "Documentation generated in docs/security/"

# Installation (for system-wide deployment)
install: libhmr_security.a
	@echo "Installing enterprise security module..."
	sudo cp libhmr_security.a /usr/local/lib/
	sudo cp module_security.h /usr/local/include/
	sudo ldconfig 2>/dev/null || true
	@echo "Security module installed system-wide"

# Help target
help:
	@echo "SimCity ARM64 HMR Security Module Build System"
	@echo ""
	@echo "Targets:"
	@echo "  all              - Build all security components"
	@echo "  security         - Run security validation tests"
	@echo "  performance-test - Run performance benchmarks"
	@echo "  integration-test - Run integration tests"
	@echo "  security-audit   - Run static security analysis"
	@echo "  clean           - Clean build artifacts"
	@echo "  install         - Install system-wide"
	@echo ""
	@echo "Performance Targets:"
	@echo "  - Module load time: <3ms"
	@echo "  - Signature verification: <500μs"
	@echo "  - Resource enforcement: <100μs"
	@echo "  - Audit logging: <50μs per entry"
	@echo ""